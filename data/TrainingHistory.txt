policy = 'MlpPolicy'   ohne action modification
    total_timesteps = 50000
    learning_rate = 3e-3
    pi_network = [250, 250]
    v_network = [250, 250]
    activation_fn = torch.nn.ReLU
    n_steps = 720
    batch_size = 72
    clip_range = 0.2
================== Completed: 13.10.2023 15:51:13 ==================
{'model_id': 'PPO_1', 'ensemble': False, 'forecasters': ['SolarGenerationForecaster'], 'num_timesteps': 50400, 'learning_rate': 0.003} TempDiffReward
Total agent time: 8.63s
0.1    Carbon emissions   0.8732
0.3    Unmet hours        0.6596
0.075  Ramping            1.1588
0.075  Load factor        1.0732
0.075  Daily peak         0.9501
0.075  All-time peak      0.9047
0.15   Thermal resilience 0.8857
0.15   Unserved energy    0.4938
====>  Score:             0.7986262733283488
Number of episodes with power outage: 3 / 6


policy = 'MlpPolicy'
    total_timesteps = 10000
    learning_rate = 1e-2
    pi_network = [512, 512]
    v_network = [512, 512]
    activation_fn = torch.nn.LeakyReLU
    n_steps = 72
    batch_size = 72
    clip_range = 0.2
======================= Completed: 13.10.2023 17:34:17 =======================
{'model_id': 'PPO_2', 'ensemble': False, 'forecasters': ['SolarGenerationForecaster'], 'num_timesteps': 10008, 'learning_rate': 0.01} TempDiffReward
Total agent time: 15.63s
0.1    Carbon emissions   0.4296
0.3    Unmet hours        0.9792
0.075  Ramping            0.9006
0.075  Load factor        1.2853
0.075  Daily peak         0.7009
0.075  All-time peak      0.8202
0.15   Thermal resilience 1.0
0.15   Unserved energy    0.7912
====>  Score:             0.8834436515126127
Number of episodes with power outage: 4 / 9



policy = 'MlpPolicy'  with action modification
    learning_rate = 3e-3  # 3e-3, 5e-4 later lower lr, value net higher lr?
    pi_network = [250, 250]  # [250, 250]
    v_network = [250, 250]  # [250, 250]
    activation_fn = torch.nn.ReLU  # LeakyReLU
    batch_size = 360  # 72, 200, 500
    clip_range = 0.2

    total_timesteps = 1_000_000  # total timesteps to run in the environment
    n_steps = 720  # 720, 2000, 10.000 number of steps to run per update
    eval_interval = 1440  # doing a validation run in the complete env
    save_interval = 3600  # save model every n timesteps
======================= Completed: 15.10.2023 21:07:03 =======================
{'model_id': 'PPO', 'mode': 'submission', 'forecasters': ['SolarGenerationForecaster'], 'num_timesteps': 28800, 'learning_rate': 0.003} TempDiffReward
Total agent time: 15.47s
0.1    Carbon emissions   0.7718
0.3    Unmet hours        0.4918
0.075  Ramping            0.9578
0.075  Load factor        1.0497
0.075  Daily peak         0.8605
0.075  All-time peak      0.8938
0.15   Thermal resilience 0.575
0.15   Unserved energy    0.5394
====>  Score:             0.6740217329704776
Number of episodes with power outage: 4 / 9